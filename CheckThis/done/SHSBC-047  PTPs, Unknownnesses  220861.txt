PTP's, UNKNOWNNESSES
A lecture given on 22 August 1961
Okay. what's the date?
Audience: 22nd.
It's the 22nd? By George, it is. Twenty-second of August 1961. I fooled you that time. There is a date on this watch and it's always accurate. I just never read it. Pretty hard to keep up with Galactic time, Earth time, Greenwich time, Australian time. Just as if there are a lot of times.
Well, I'm surprised, frankly, that you had courage enough to come to the lecture today. I thought you would probably not come.
What I told you the other day—for once in my life, I'm right. As a matter of fact, "Astounding Campbell" ran a whole editorial one time on the fact how damnably right I was and that was what was wrong with me.
No, unfortunately, I am right. The reason the Australian course took a long, long time to get people going on Goals Assessments, the reason nobody got their goal in Washington on the Washington course and the difficulty which has been entertained here are all under the heading of "rudiments out, goal vanishes." If the rudiments are out, the goal vanishes.
Now, this is the way it is. And it is worked out with this particular unit at this time. I am very sorry to say that person after person after person, the goal has been there for weeks and weeks and weeks. Smothered by an out-rudiment. So it was just the rudiments were out. That was all. And that happened to the goal. And the goal does occur in the first 150 goals a pc gives you and the terminals should occur in the first couple of hundred terminals. And that is the way it is.
The mystery is solved. And I want to thank the people here at Saint Hill for bearing with me because I have kept my cotton-picking paws off of you. And maybe this has slowed down your case gains, but it's speeded up Scientology. And I will now let you in on something: the fact that I have not been doing Goals Assessments on you because I could do Goals Assessments and it proved absolutely nothing.
And if it depended on me to do a Goals Assessment on everybody on Earth who will be cleared from this time henceforward—. Pretty grim, huh? And me interested in boats too. So look it over. That doesn't make sense, so what I've had to do here is suffer agonizingly and watch this go on and on and on because I couldn't figure out what was happening You see, I wasn't at all sure—I wasn't at all sure—that we had not encountered another phenomenon. And the other phenomenon was that goals just kept nulling and a person would sooner or later eventually go Clear on just nulling goals. And I was not at all sure that this couldn't occur.
And you've proved it conclusively. It doesn't occur. All right. That's very well worth knowing And it—I haven't been using you for guinea pigs. I've been teaching you the best I knew. But I at the same time have not gotten myself so involved with cases—beyond steadying you up and keeping you on a straight line—that we failed to find out what was going on with Goals Assessment.
So it's a—it's a green light now. The starter's gate is open. There is no reason now why any case, no matter what condition that case is in, cannot be cleared. The barrier is only this barrier: that the goal or the terminal of the case becomes smothered by out-rudiments. And the goal disappears off the E-Meter if the rudiments are too wildly out. And so assessment can go on forever. An assessment forever does not make a Clear. Now, that's very well worth knowing So that was the only bug, as far as I'm concerned, on the line.
Now, with case after case here in just the last few days we have been coming up with the fact that it was goal number two, goal number forty and so on. And yet we've gone on and assessed just endlessly past this point with no appreciable case gain, you see. 	Now we go back, clean the rudiments up very, very carefully and what do we find sitting there? We find the person's goal answering up live. We find the person's terminal answering up live, but smothered—smothered by an out-rudiment. So if it took this long to learn this after we had the technology of Clearing as of spring of 1961, you see and if it took clear into August to learn this bug, I'd say it was very, very profitable to remember that bug. 	So this can happen with an E-Meter—although we've known this for a very long time that this could happen with an E-Meter, that a reading could disappear off of an E-Meter because of an out-rudiment. That was not an unknown phenomenon. But it didn't have great importance until we were doing Goals Assessment and I hadn't connected it directly with this difficulty in goals. And it's been quite a little stunt here trying to find out what did connect up and why. But that is the only thing it is. It isn't anything else. It's nothing very spooky. And it's just the fact that Goals Assessments take forever when the rudiments are out. When the rudiments are in, they are rapid.
The goal of the pc will be found in the first 150 or so goals and the terminal will be found in the first couple of hundred terminals. Certainly within that wide order of magnitude you'll find the goal and the terminal of the pc.
Now, when the goal and terminal of the pc is found, now why don't we get instant and immediate clearing How can clearing hang up now? Rudiments out. That's all. Just the rudiments out. If a case is running and running and running and running and running for a long time on the Prehav Scale and so forth, we could have several bugs. We could be running on a foreshortened Prehav Scale or something of that sort. But that's up to me. That's not up to you. I can give you the best and most now in a Primary Scale. And I've already given it to you verbally. I haven't released it in actual put-together. 	There could be something buggy about that or this could have occurred— and this is apparently the next bug: The level looked flat because the rudiments were out. So this phenomenon also applies to the running on Prehav Scale. If it's flat and a level looks flat, then you must turn over hell, heaven and everything else to make sure the rudiments are completely in. And then check the level again for another run. And that's the only way to be safe. Run it another twenty minutes. Run it twenty minutes to flat, then just tear the rudiments to pieces any way, shape or form you possibly can with sensitivity at 16. In other words, just get them in, in, in. And then run another twenty minutes of the same auditing command. Got it?
Audience voices: Mmm-hm.
In other words, don't trust a flat-test until you put the rudiments in. Take the first as a conditional flattener. Now, get the rudiments in and run another twenty minutes. So you actually have a forty minute test for the end of a level on a terminal, goals terminal. Follow that? Seem a simple thing to do?
All right. So let's make another little rule of thumb here as we go, just as a cautionary point. When we have gone to 200 goals and we haven't gotten the pc's goal, we get the rudiments in with sensitivity 16, no matter if it takes us sessions to do it. We handle those various chronic, long-duration present time problems. We just handle everything we can and go back to the beginning of the first list we made and go over it again and we'll find the pc's goal every time. Because we're doing it just time after time. This is just working out pocketa-pocketapocketa. It's just open and shut. It's just a—mostly a matter now of going over it. And everybody who has gone through this routine so far—that's over half of this particular unit—we found the goal in the first 150.
So if you get up to goal number 200 and you haven't got the pc's goal— although you were sure the whole time that the rudiments are in; you're absolutely sure that during this assessment the rudiments are in—that fact alone says they're out. That alone says they're out. So you'd better start back at the beginning of the thing. Get those rudiments in with sensitivity 16. Just—be just niggling, nasty about the whole thing. Get them really in. And then go over that goals list again from the beginning and you'll find the goal. Now, that's what's throwing it out. And that's how we can get it in. Okay?
This is quite a win for us. This is quite a win. The first Clear from this unit was Vickie. Now, a lot of people had a hand in this. Took too long to get her goal, so she had to be stabilized out after she arrived back at Joburg. She stabilized out and went Clear, boom!
There was just nothing to it. I mean, it was dead easy. But there was an awful lot of work went in on this case by members of this unit and by Mary Sue and so forth, making sure of the goal and terminal. But we got these a little late. It was a little late in the course when these things finally came so we couldn't complete the run and it took just a few hours to stabilize the case after it got home, so that's your first Clear.
Now, the sooner you get the pc's goal and terminal, the more time can be devoted to this. Now, you've done a lot of work here this summer on the subject of Routine 1A, Problems and Rudiments. I was trying to get problems, ARC breaks and that sort of thing pre-straightened out. Now, oddly enough, that is a successful action. Might not look successful at first glance. It might look like a wild excursion, but it isn't. We have to remember that Vickie was absolutely flattened on Routine 1A before the rest of it took place. Isn't that interesting?
All right. Therefore, you can put another little rule of thumb down here. This is an interesting tip. You've got a pc that's ARC breaky. You can get into this kind of a jam: How do you clear rudiments with a rudiment out? Ah, that's a fascinating question, isn't it? How can you clear rudiments with a rudiment out? And there's the biggest single problem. That's a rough problem. How do you clear rudiments with a rudiment out?
Well, I'll tell you frankly that you cannot clear an ARC break with a present time problem in existence. And if you make an ARC break with the pc while you are running a present time problem, you have had it. you have just about had it! 
The ARC break is sufficiently bad that you can't clear the present time problem. And because the present time problem is in existence—you tell me what happens when you try to audit a case with a present time problem in existence? Isn't it no-change? It's no-change, isn't it. you can audit a case twenty-five hours with a present time problem in existence and get absolutely no graph upgrade of any kind whatsoever. The case shows no improvement of any kind. Why? Present time problem had it pegged.
Well, let's look at this in the little tiny vignette of you trying to clear rudiments on somebody. And you start a present time problem. "Have you got l present time problem?"
"Yes," the needle says. "Yes," the pc says.
"What is it?" you say. And the pc tells you. And then you drop the lampshade and accidentally let off a 12-gauge shotgun and do a few other little minor things that causes an ARC break with the pc. What are you going to do? That is a very interesting point. What are you going to do? Because your ARC break clearing process won't run. why won't it run? It won't run because there's a present time problem in the case.
The guy gave you the present time problem. You made the ARC break. Now, because he's ARC broken, you can't audit the present time problem very easily. Now, where're you going to go? So there's the biggest, single jam up in auditing and is the basic source of any feeling you have that it's hard to clean up an ARC break. The ARC breaks which you've had trouble cleaning up are those which occurred while you were trying to clear up a present time problem. Think it over. And of course, they didn't clear. There's no process known to man that will clear an ARC break if it has been made on the present time problem. Grim, huh?
So it isn't choosing the wrong level that stalls a case from clearing. It's clearing up rudiments. Ability to clean up those rudiments. And when this one occurs—when you get an ARC break going when a present time problem is in existence—of course you can't clean up the ARC break.
Well, I'll give you a tip as to how to go about this. This is not an unsolved problem. It has been unsolved to you up to this time although you probably haven't looked at it straightaway as a problem. Only it is the roughest problem of auditing. That's why your case doesn't make any progress from that point thereon. And of course, because the ARC break is there, the present time problem now reads null. It's submerged because you've got an ARC break on top of its read. So you, of course, don't now suspect that you're running a case with a present time problem on it because you think you've solved the ARC break. You got the idea?
Here's the way I would handle this. I would just somehow or another bull way way, plow my way, blunder my way through the present time problem process that I was running. I wouldn't try to clean the ARC break.
Seems to be a violation of auditing, doesn't it? But it isn't. In other words, the pc's got a present time problem, you had a registry. Now, if while trying to clean that present time problem you get an ARC break, you had better give the ARC break minimal attention and continue with the present time problem whether it now registers or not. Otherwise your case will hang fire. you look kind of "What's this?" You want to know how the hell you do that. Well, you just altitude your way through it without invalidating the pc any further or something like that. You'd be surprised what you can do with a hearty 'Oh well, I know that was an awful goof and I'm sorry. But let's just bull our way somehow through this present time problem. Let's at least get that out of the way and then we'll handle this other thing. All right?" And go ahead and handle the present time problem that you were handling. Okay?
You see that as a practical course. Otherwise the problem is totally unsolvable because you cannot clean the ARC break with any ARC break— TR-5N or anything else. It won't work when it's sitting on top of the present time problem. That's it.
All right. Now, running an ARC-breaky pc normally is because the pc is being audited over problems you have not detected or you have ignored, in some fashion. Any active, busy person in life has a great many present time problems which he not-ises in order to be audited. I wouldn't be looking at anybody. But they have a lot of present time problems, don't you see. And they not-is these things. And they say, "Well, I don't have a present time problem because here I am being audited." Wrench! You see? "And I'm not going to do anything about that letter, that telephone call. That's all later." Got the idea? "And here I am being audited. Okay. Go ahead and audit me."
Now, you don't get a registry. The guy's sort of ARC broke himself, you know. He said, "Well, that's it," and you got a present time problem on a not-is.
You as an auditor should suspect—let us take an executive in a Central Organization; let us take anybody who leads an active life in any way—that that person has, hanging fire at the moment he's being audited, at least one present time problem. And on such a person in beginning session, if you do not find a present time problem, get suspicious. And run one anyhow. Got it?
Audience voices: Mmm-hm.
Now, that's the only thing that'll hang cases up in clearing is out-rudiments. And if a present time problem in—is in existence, you, of course, cannot clear the rest of the rudiments. And a present time problem can be not-ised. It can be submerged by the pc himself. Can actually be just smashed into existence.
I've had a pc say, "Well, I just don't pay any attention to these things. I don't see why anybody else has to have ARC breaks or anything, because I just don't pay any attention to these things." The only thing that registered, "Do you have any ARC breaks you are not paying any attention to?" You get a registry.
The pc actually, with attention just totally fixated on this ARC break has not-ised it, has forcefully put another flow of attention elsewhere, while holding almost with force this ARC break into invisibility. You get a slow gain. see that?
Well, that works on many people with present time problems. If a person is leading an active life and if a person has a lot of Indian clubs in the air in existence, you can just count on the fact the person has come into session with a present time problem. It is utterly inevitable that they have come into session with a present time problem. And that's it.
And on such a person, it is faster to run Routine 1A, any version of, to its bitterest end before a Goals Assessment or goals run is attempted. It is faster. Interesting, huh?
We're not just taking the evidence of one case, although we do have one ease in complete evidence of this, but we have other instances of this.
So if you're getting a slow run after you've found a terminal . . . Now, we know why a terminal disappears. We know why a goal disappears or a terminal disappears. It becomes invalidated in some way, rudiments go out in some fashion, various other things happen in that early assessment area. Rudiments out so you don't find the goal, you don't find the terminal. Assessment goes on forever and it actually does the case no good. Don't think that it does the case any good because it doesn't.
All right. Now, got that? If the thing isn't running smoothly, suspect first that you haven't flattened the level. There's something left on this level. Every time you finish up a level, suspect there's something left on the level, because a series of unflat levels can keep a case from clearing.
So remedy number one of this—these difficulties we've been having in clearing is simply do a double check on the level, as I gave you before. Twenty minute check—it's flat, quarter of a tone arm motion. Twenty minute test— quarter of a tone arm motion or less for twenty minutes. Dandy! Wonderful! Wunderbar! Gorgeous!
Now, let's get the rudiments in. Now, let's run it for another twenty minutes and see if we still have a quarter of a division or do we have four dials? Got the idea?
All right. Now we know it's flat. Now we can count absolutely on the thing being flat before we go on to our next level assessment. Okay?
Now, if a case, in spite of this precaution, continues to hang up in running the goal—on terminal, Routine 3, case continues to hang up—and we're not now paying any attention to Security Checking; we'll take that up in a moment—a case isn't blowing Clear, assume the case is being audited over a present time problem. And just do everything you can possibly do to thresh out this thing. And you have Routine 1A.
And it would not be amiss, if a case apparently is hanging fire, is going, let us say, something on the order of twenty-five hours without any appreciable gain. Even though he's being run on his goal and terminal, twenty-five hours is a perfectly adequate test on this. And the person doesn't seem—twenty-five hours of goals and terminal run I'm talking about—doesn't seem to be making a terrific gain. Something's happening here. Get a profile on him; profile hasn't appreciably done something one way or the other, assume immediately the person is being run on a present time problem. Shift immediately over to Routine 1A. Flatten Routine 1A. Go back and pick up the goal once more that the person had and terminal and continue your run. Okay? Got it? And we won't have this, forever clearing. That will put it to bed in a hurry.
Now, a case that, in the process of doing a case assessment sheet and doing early work with, appears to be ARC breaky, drop your Goals Assessment and go on at once to Routine 1A and get problems goodbye forever. Because a case ARC breaks only when present time problems have their attention split. That is the basis of the ARC breaky case. ARC breaks, present time problems.
Routine 1A is the treatment. And I don't care how many versions you run of Routine 1A. I don't care how many oddities you throw into it as auditing commands; get that person totally, totally, totally accustomed to problems. Confront on problems. "Recall a present time problem." "What problem isn't present?" You know? Anything, anything at all. Only get problems just completely shaken out. I'll give you a little bit more on that. But let me finish off this dissertation just exactly on the subject of Clearing.
Get 1A flat, flat, flat. Now, there'd be two places where you'd flatten 1A. One, it becomes obvious to you that this pc is hard to hold in-session. That's becoming obvious to you that the pc is hard to hold in-session. The pc is ARC breaky. Your auditing is fairly good and the pc continues to ARC break. Assume at once that the pc is being audited over the top of present time problems, which could include merely a present time problem of long duration and hidden standard. You see, that all comes under the heading of present time problem. 
All right. That one. And later if the case doesn't seem to be going Clear after being run for twenty-five hours on the terminal and so on—doesn't seem to be—all right, you missed. Let's take up Routine 1A, flatten Routine 1A completely, utterly and completely. Get off all of these stuck attention points on the subject of problems, worries, anxiety and concerns. Come back to the same goal. Don't do a new Goals Assessment. Come back to the same goal, same terminal, get your rudiments all the way in. Reassess it newly on the Prehav Scale and sail along. You'll find out it probably will now assess at the same place that it assessed the first time you ran it. It very probably will. And then go on clearing the case. you got that?
Now, this gives you a little more scope, doesn't it? It gives you a little more hope along this line but I have seen all these points working out. I have a good reality on these various points and it seems very improbable that any auditor doing a businesslike, technical job—you know, knows his TRs pretty good and knows his Model Session pretty good and knows how to run an E-Meter and so on—it seems very improbable to me that with these precautions he would fail to clear any pc that sat down in front of him. Even though they were stark staring mad. Okay? I just would think it improbable that it wouldn't happen because that is all that is happening that stands in the road of Clearing
Rudiments are out and the chiefest rudiment that can go out is—the one that causes grind is the present time problem. That's the main one that can go out. So that's the one you've got to get off because it can stall everything else. Given an auditor who is giving an auditing session, of course.
Okay? Hm? Is that easily grasped by you? Easily understood? Hm? Feel yourself coming out of a little bit of fog of why are we grind, grind, grind on assessments and why are we grind, grind, grind when we get the fellow's goal and terminal, huh? Does that make any sense to you? All right.
If present time problem was that important, then we had better do something more comprehensive about Routine 1A. And we'd better get Routine 1A into some kind of shape. Hm?
All right. Routine 1A is simply Problems and Security Checks. That's all Routine 1A consists of. Routine 1A does not have any auditing commands. It is simply problems—handle them, you see. So this gives you a completely wide-open field for the handling of problems. How do you handle problems? And that's what it comes under the heading of, which is a whole subcategory of Scientology. And it's become a very important category.
But Routine 1A is a designation by definition, simply handles problems and Security Checks.
All right. So we've got this whole subclassification of, "How do you handle problems? What's the anatomy of a problem?" I've given a lot of lectures on it. Postulate-counter-postulate, each postulate being surrounded by its own confusion. It is problems alone that give you this terrific idea of survival. If you want somebody who works very, very slowly, in an organization for instance, have somebody who has lots of problems. Everything will seem like forever to them, see. Everything seems like forever.
It's your timelessness. A problem gets locked up in time. Because it's a number of factors which are all jammed together and so on. So a sort of a timelessness or a slowness or something like that is caused by problems. So this tells you that problems could be read directly by, one, a sticky meter—an unchanging graph— see, the answer to each one of these things is that the guy's got problems. This is what you'd say, see. Meter's sticky—guy's got problems. Unchanging graph—guy's got problems. See. Relatively simple remark. Slow reaction time. His reaction time is below normal—guy's got problems. Fellow isn't moving around much in life, doesn't like to leave his home—guy's got problems. Got the idea? No motion—guy's got problems. Follow this?
The answer to these various motion characteristics are all problems. Problems stick and float and tend to move forward in time. And the fellow can be so fixated on the thing that he looks like he's moving forward in time, but actually he's stuck in the past. So of course everything seems to be timeless around him. So therefore, his reaction time, his inability to move around and do things, his loss of activity in the society, an unchanging graph, a sticky meter, which—and an unchanging meter, you can add that to the list— all of these things denote problems.
All right. Now, if problems are that important, aside from all earlier definitions of problems, there must be another definition of problems that is even more useful to you. And that definition of problems exists in one single word: unknown. That's the problem.
A problem is an accumulation of not-knowingnesses and a consideration of the person as to the value of the not-knowingnesses.
I told you one time that a thetan was a mystery sandwich, that he was stuck to his bank with mystery. Clear back about 54, 55. Mystery sandwich. Thetan—mystery—bank. And that's how his bank is stuck there. That's how he stuck to anything. That's how he stuck to valences and so forth. Mystery is the glue of life. If you want freedom, you must restore knowledge. If you want slavery, establish ignorance. Now, there isn't—I didn't make a single comment about Rome or anything of this sort. I'm on my good behavior today. But if you want to—if you want to install a great deal of slavery, you've got to take the knowledge out of the subject and create a bunch of not-knows.
The common denominator then—and it's very interesting to have a common denominator of all problems. Aside from their anatomy of postulate counter-postulate and confusion-counter-confusion and all of this sort of thing, the common denominator of all problems is an unknown. An unknown. A problem cannot exist in the absence of not-knowingness. When knowingness is established, a problem ceases to exist.
There's an old Dianetic Axiom on this, by the way: is randomity can be caused by a missing datum. Man, that's the most randomity that can be caused. The randomity currently called an automobile engine—a lot of randomity connected with automobile engines these days and the missing datum, of course, is an engine.
An automobile engine is a way to make a state tax motorists. See, it burns tremendous quantities of fuel which is very dear, which is very hard to get. Keeps the state wealthy and keeps the oil companies wealthy and everybody's wealthy, but you haven't got an engine.
What you need in an engine is something you can throw a couple of carrots in and it has a maximum of about three working parts and there it goes. That's an engine, see.
An automobile engine, for the absence of an engine, causes you to put in fuel at high taxation and high sales price to create heat; and then to put in a radiator and a water jacket and a fan to take the heat away. Which I think is an awfully interesting action. Both of them are totally opposed to one another. And the engine must run by heat, so you cool it.
Now, all kinds of things could be said about this, but of course the missing datum is something in the field of engineering on the subject of propulsion or motors or something See? It's a missing datum. I don't adventure to tell you what the missing datum is about engines, but it causes all this other randomity, see. And every time you get in your car, you say, "Well, can I afford to go home?" You know?
I think the gasoline in the United States is now worth something on the order of ten cents a gallon and the government gets about thirty-five cents a gallon. Oh, but recently, I understand, there's been a gas war. And now they have to pay the service stations to sell it. I think that's about right. They're selling it for fourteen cents and they get—at the stations and the oil companies and so forth, costs them nineteen cents to provide the station with it or something like that. Nonsense.
There's that randomity. Then there's the randomity of replacement of engines and then there's the randomity of automobiles that actually can't be controlled. They haven't got a good positive engine, although the engine's all right. But the engine slows down in speed. It's very hard to slow down one of these engines. Just because you take your foot off the accelerator is no reason you are instantly and at once braking with an engine. You aren't, really. There's a split second or two there when the engine's inertia goes on. Various other things are occurring.
And you get the randomity of traffic. Traffic accidents, that sort of thing. Relatively uncontrollable motors. They're not slung low enough. They're not positive enough. You get—well, you get the problem called Los Angeles. Totally. Freeways swooping in all directions. Going up into the sky and down into the valley, all completely hidden under a vast miasma of smog, see. Automobile. Automobile mufflers. This causes a bunch of randomity.
So everywhere you look, you get more randomity, more randomity, more randomity, more randomity and so forth and it's the missing datum, engine. What's a proper method of propulsion?
All right. You see that? There are all kinds of problems evolve out of this one missing datum. Now, man's difficulties were busily getting more and more difficult. His various relationships nation to nation, person to person, group to group, this sort of thing, was getting more and more involved and so forth, because of a missing datum.
The missing datum added up to many data—a technology about man. So a lot of people kept coming in with all kinds of false knowingnesses of various characters and another. And this just created more problems, you see. One didn't have a positive datum concerning man. Well, was he bad or good? Or was he an evil beast? Obviously, most of their data is wrong because it isn't working.
All right. So this causes a tremendous—in the civilized world—it causes a tremendous amount of randomity. It's just the missing datum, don't you see.
All right. So—the only reason I'm calling this to your attention in the broad sphere, is so that you can see it easily when applied to a bank.
All right. Here's a pc and you start running problems on this pc and you run—you say, "Describe the problem" and "Describe the problem." He keeps giving you different problems. Different problems. Different problems. Different problems, problems, problems, problems, problems, problems. You ever notice that? You keep running this, he keeps giving you different problems all the time. Even though you went in for problem A, you wind up with problem AAAZ. See, you've just got problems, problems, problems. There's a missing datum someplace. There's an unknown.
And just as Los Angeles smog goes up to this idea of no engine—the data on how to make a proper propulsion unit, just as traffic accidents, automobile taxation, government efforts, oil company, you know, all these other problems. Each one of those could be considered as a separate problem, don't you see?
But if you started running them on the pc, "Well, do you have a problem?" And "Describe the problem to me."
And the pc would say, "Los Angeles smog."
"Describe the problem to me."
And the pc would say, "Traffic accidents."
And "Describe the problem to me."
And the pc would say, "Taxation."
Got the idea?
And these things don't seem to add up because you don't even know what the problem is, you see. But that's why he's got a problem, because he doesn't know what it is, see. And it causes you to Q-and-A with him a little bit because he doesn't know what it is. Then all of a sudden, you don't know what it is. Got the idea? Because obviously it's an unsolvable situation.
The common denominator of all problems is, you could cut through to a center problem of the pc with great speed by running unknownness on the subject of problems. Interesting idea, isn't it? Unknownness on the subject of problems.
All right. Let's give you a sample process. Now, let me define for you, first, two-way comm.
Two-way comm is an inquiry of the pc as to what is going on and an invitation to him to look at it and that is all. It's an inquiry as to what's going on and an invitation for him to look at it. An invitation. No direction for him to look at it. So it is limited to, "How are you doing?" "What's worrying you?" and, "Well, what's that all about?" And you've just about summed up the totality of two-way communication.
And when we say two-way comm, you'd better just limit it to just exactly that and nothing else: "How are you doing?" "Well, tell me about it"—which is just about the same thing as "Take a look at it"—and, "What is that all about?" That's two-way comm.
Now, I've done a no-bridge statement here. But you have been handling processes as two-way comm. Ah, ah, ah, ah, ah, ah. Two-way comm does not consist of any process whatsoever. You understand? There's no process involved in two-way comm except the process called two-way comm: "How are you doing?" "Tell me about it." "What is it?" Got it? That's it. And there's nothing more to two-way comm than that.
Now, our next observation in this particular line is that if you start a process, you flatten it. And that had to do with engrams—1950. And it had to do with all of the 50s. And it has to do here with the early 60s. And this is a datum about auditing which has never changed. There has never been any change, variation and so forth. There are a tremendous lot of constants in auditing. And this is one of them.
Three basic constants of auditing could be—say: Run a session, flatten all the things you run into—don't keep Q-and-Aing and running into more things that you don't flatten; flatten what you contact and end sessions. These have always been with us, you see.
So that if you start any type of inquisition on the subject of the present time problem, you flatten it by the E-Meter. If you're going to run unknowns on a present time problem, flatten it by the E-Meter. What do I mean by flatten it? Well, you don't have to run a twenty minute test on it. But you sure have to get the needle action out of it. you have to get the needle action out of the process you are running. 
All that is—all that is cautionary. I'm just doing a review here of something, because I'm about to give you a datum. And that is to say, in Model Session it is totally allowable to run out the present time problem by discovering the unknowns connected with it. And you'll run more present time problems faster than you ever heard of. It's with speed.
Use any version of the odd-numbered postulates. "What shouldn't be known?" "What is not known?" "What have you forgotten about it?" "What should be forgotten about it?" "Who would be upset if you did forget about it?" Anything you want to do. That is one process. You're running unknowns on the present time problem. And that is not two-way comm. You're running a process. You're running a process with a varied command and that's all you're doing.
So get that well established because you can wind a pc up in a fine state, man. Because you get him way down the track and you all of a sudden shift gears on him into saying, "I'm going to run some other process on this now," thinking you have not been running a process and you're going to be in trouble at once.
So running the odd-numbered postulates, which is the Not-Know, Forget, on down to Doubt and Pretended Know—the whole rack of the not-know scale—you can keep putting these to a pc in any kind of a version or wording you want to. And you don't have to go repetitive, repetitive, repetitive. "What have you forgotten? Thank you. What have you forgotten about that? Thank you. What have you forgotten about that? Thank you." Now, that is not being very smart and it's not being very speedy. Because there's something forgotten about the problem. There's something not-known about the problem. There's something doubted about the problem. There's something pretended.
And all you've got to do is get all these various versions of notknowingness off the thing and the problem goes svoosh! I'm giving you this because you can stop worrying about a present time problem occupying threequarters of your session, if you do this well. Now, the only reason you object to a present time problem is because it takes such a damn long time to flatten one of the things. And there's such a marvelous opportunity, in this long time, for ARC breaks—as I've just pointed out to you are very dangerous while you're running them. See?
So we've got another process here which has just sprung up and—which is very old actually, but applied to this particular problem of problems is right on the common denominator of problems. The guy's got a problem because he doesn't know. Well, let's find out what he doesn't know. And the problem goes foosh! Got the idea?
A problem almost has one each—at least, a minimum of one each—of each part of the notknowingness scale. Usually the problem should be notknown by somebody. The pc doesn't know something about it. In other words, an unknown. There's an unknown concerning it. By forgetting it he would get even with somebody. You see? Some part of it. Somebody else doesn't know about it, you know. All of these various versions of not-know occur around a problem. And there may be just only one of each. See? So it's a varied idea of problem. Well, let's plow out the stupidity of the thing and we've got it made, you see. see how that would work?
Now, if you became able to do this, well understanding that two-way comm just has its three parts of, "How you doing" "Tell me about it," and "What is it?" and that's all, then you won't get into the idea that you're running unknowns with two-way comm. That's phlooey, see. You're actually running a process.
Now, you said in the rudiments, you said, "All right. Do you have a present time problem?" and you got a little knock. No matter how tiny, but you got a knock on the meter. And you say, "What was that?"
And the pc says, "Well, that was, uh—I don't know how long the session is going to last."
And you say, "Well, we agreed to end it at four o'clock."
And he says, "Well, all right."
And you say, "Good. Well, do you have a problem?"
No knock. You've got it.
You say, "Do you have a present time problem?" Knock. And you say, "What was that?"
And the pc says, "Oh, I don't know. I'm pretty worried about the mail. I don't know whether I'll get the mail tomorrow," or something like that.
And you say, "Well, all right. What's in it?" You know?
And he says, something or other and something or other. And that's what that's all about and so on.
And you say, "Okay. How is it?" You know, "How you doing?" that sort of thing.
"Well, all right. I think I can handle that."
You say, "All right. Do you have a present time problem?" No knock. Now, you've handled it by two-way comm.
All right. But the second time you said it, "Well, do you have a present time problem?"—the second time you said, "Do you have a present time problem?"—you get another knock.
Well, the way you'd handle it with Not-Know is, without announcing the fact, you would start in on a Not-Know run on this particular problem. And it is a process and you should understand it as a process. The way you bridge out of that can be very careless, but it nevertheless has to be a bridge out. "I'm going to ask you a couple of more questions about this now and then end this." End this. See? It's not a process. But it is. And you'll find out the problem will have evaporated rather rapidly.
Now, what would you ask him? Well, he's worried about the mail. Now, that's a present time problem he's got. But this is going to turn one way or the other, one way or the other.
And you say, "Well, can you phrase that problem a little bit better?"
"Well, yes." And now it's twisted one way or the other.
And you say, "Well, is there something unknown there?"
"Oh, hell, yes. I don't know whether the mail's going to come or not. I just told you."
"Well, all right. Are you afraid somebody else is going to forget?"
"Oh, yes. As a matter of fact, that's the whole thing. They might've forgotten to send it to me, you know. And then that would be a hell of a mess."
And you'd say, "Well, all right. Now, should this be unknown to somebody or other?"
"Well, not really anybody, but it really should be unknown to my wife because she doesn't know I'm getting it."
And you say, "Well, all right. That's fine." you say, "Well, is there anything else there that is unknown? Is there anything else there that should be forgotten? Is there anything else there that if you forgot it somebody else would be real upset? Oh, I get it. All right. That's fine. All right. Now, do you have a present time problem?" No knock. Got it?
Now, if you learn to do that expertly and smoothly and try to kind of stay on the subject of vaguely what his present time problem is, not trying his whole case and terminal too. you got the idea? You're talking about mall. And he was worried about mail. So this seemed to be the common denominator of his present time problem, was an unknown about mail. Or it might have been an unknown about somebody going to mail him something or something of this sort, you see. But you got that sorted out. Now, you stay on that AS a line of questioning. It's notknowingness about mail.
Otherwise, you're going to get Los Angeles smog, taxes and we're going to wind up running the whole case and find him eight trillion years ago and 30 forth. And we won't have handled the present time problem. We'll be handling the whole case with unknowns, which we could do too, see. But flatten what you contact. Not only flatten the process you're running, but flatten what you contact. Don't let that thing get out from under you.
You're trying to flatten that thing which you contacted. You are not trying to flatten the case. And that is the auditor's biggest difficulty on the subject of Q and A. And Q and A could be redefined as an auditor's effort to solve the whole case, having contacted one incident. See? They let that incident go. And then they get a hold of another incident and they get hold of another and another and another and another and another and another and another and another. Ohhh! Where are we? What is this all about? So the fellow said present time problem and he said mail. All right. Mail.
We got him to redefine it. We were careful about it. Let's make him really define this present time problem. And then let's get that present time problem fixed. That present time problem. It has to do with mail. Otherwise, he's going to go down to the deepest unknown of his bank. There's nothing wrong with that in processing. But there's everything wrong with that in rudiments. See? See, he's going to wind right up and find the unknown which is motors and he will suddenly say, "Motors!"
And you'll say, "What?"
"Well," he says, "this adds it up. Los Angeles smog, taxation, oil companies, the murder of Rudolf Diesel—it all adds up. Everything all adds up and so forth. And I got it and that's the basic unknown. They don't have a motor."
Well, that's great. There's nothing wrong with that at all, but that is not what we are trying to do in rudiments, see. So he will go around this whole Excursion and get down to the central unknown of his track if we continued to question him in this particular line. And that's perfectly all right for a session but not all right for rudiments. So identify the object of the PTP. Remember you get changes on terminals. You don't get changes on conditions. 30 get the object of the PTP. PTP object—a car. PTP object—mail. PTP object—wife. PTP object—husband. Got the idea? PTP object.
Now, of course, there's another object going to creep in on you. And that's the beginning of the smog over to the tax company, you see? You're not interested in that other one. That wasn't worrying him a minute ago. why should it worry him now? Well, we've restimulated him into a worry, so we can process him out of a restimulation. In other words, we're going to come off of that. Got the idea?
"So what don't you know about mail?" "What should be forgotten about this mail?" Preferably "this mail," you see. "What should be forgotten about this mail?" "Well, should this mail be unknown to anyone?" you know. Suspect him of that. "Well, if you forgot about it entirely, would that be an overt against somebody?"
"Yes, it sure would. It'd be an overt against me. I wouldn't pick up my paycheck," you see. 
You got what you're trying to do? You're trying to take this whole thing, but you're trying to take it against one object which is the object of the present time problem. And if you get very good at this, you'll find out present time problems cease to worry you. You'll start to regard them with some contempt.
So the guy has a present time problem; you know that twelve, fifteen questions at the absolute outside later, he won't have this present time problem. He'll be fine, his attention will be in the session. Okay?
See this? So there's a trick there.
Now, obviously, that was one of the things we needed desperately in auditing, was ways and means of handling a present time problem, rapidly, effectively and scoot along right on down the line and get it all handled and get that rudiment out of the way and get the session going. Okay?
Now, you'll find out that if you can ably handle PT problems, that your ARC breaks will get very few. To minimize ARC breaks, handle present time problems.
All right. Now, there's one more little factor involved in all of this. And that's Routine 1A as a whole subject. Routine 1A consists, of course, of everything you could think of, in relationship to problems. Any time you think up a Problems Process, it could be part and parcel to Routine 1A. You could say, "Who has problems? Thank you. who has problems? Thank you. who has problems? Thank you." That's fine. That's Routine 1A.
"What problem could you confront? Thank you"—Routine 1A. "What problem isn't present?"—Routine 1A. You understand? "What unknowingness exists about problems?"—Routine 1A. Good or bad. See, it's all Routine 1A. You could run any of these versions for Routine 1A and you'd come up at the other end with a total ability to confront problems without being upset about the unknowns of them.
You'll find man's main difficulty is confronting the unknown. And it's the one thing he does not like to do. Well, basically, it's hard to do. It's hard to do.
Germs. You say, "What germ could you confront?" And of course, the answer is, "No. I can't confront any germ." As far as your confrontingness is concerned, germs were an invention of a fellow by the name of Pasteur and existed only in his notebook. You've never seen one. You've seen a microscope, but how do you know you aren't just looking at Brownian movement? I never talked to any germs. Oh, I've been down skid row in Chelsea and I have talked to some germs, but—I'm sorry. I apologize.
But it's not there. You ask some—it's an absence of confrontingness, don't you see? There's nothing there to confront. You don't carry microscopes around and examine all of your friends, you know. I can see a social gathering now where everybody was insisting on microscoping everybody's hand before he shook hands, you know. Very interesting.
But anyway, it's a no-confront. Confronting the absent. Joe, Bill, Pete, somebody, wife, husband, something, is absent for forty years. And you say, "Well, what part of your wife could you confront?"
The answer, of course, is, "No part of my wife, she isn't here." It's a no-confront, isn't it?
All right. But it also happens to be an unknown. An absence adds up to an unknown and we're back to processing loss, which we knew as a very powerful, potent button about 57 and 58. Loss, the direct processing of loss when you start processing unknowns. Because what is so damned maddening about a loss is you don't know what has happened to it. See? And it just becomes instantly a not-know. 
So therefore, a person who has lots of problems is liable to start experiencing sensations of loss. you get all kinds of crossplays going here of one kind or another, you see. He's starting to assign causes of loss. Person has the problem of having murdered his father that he'd never seen. you find this in an institution. He's going around the bend on the subject of having murdered his father. You find them all the time. But he didn't, see. But the idea that his father is gone and that he doesn't know who his father was or he—some kind of a lineup of this character occurs. So a lot of notknowingness about a father causes the fellow to go to the bottom of the Prehav Scale and pretend some knowingness. And to add to this, pretended cause.
And pretended knowingness and pretended cause are almost blood brothers. You'll find these two things going together consistently and continually. When somebody gets real plowed in on pretended knowingness, you'll find a pretended cause moves in behind it. And it makes somebody who is busy inventing things feel very peculiar indeed. I mean, somebody who's actually inventing something, it makes him feel very peculiar. Because if he gets down to the Inventor's Society, why, he'll find a bunch of fellows, perhaps, who pretend to know all about his invention and who invented it two years before he did. These things go hand in glove. Boom! Boom!
And we ran into this so often that I invented a rebuttal in Scientology which is quite effective, which is "Well, what did you invent?" And, of course, it leaves them there with their jaws flapping
You say, "So-and-so and so-and-so and I did so-and-so and so-and-so."
And then the other person says, "Oh, yes, yes, I invented that. Yeah, oh, yeah, we did that and so forth. And we know all about that."
And you say, "Well, what do you know about?" That's the end of the conversation, man. The person who is in that state can't duplicate and they can't feed back what you've said, you see. That's the trick.
So they tell you something entirely disrelated, that is way over the hills and far away.
Up to that moment, you're caught in this trap. you say, "Well, I haven't done so much," you see. you—nothing has been made out of you for whatever you have done, you know. Nothing's been made out of you. But then you find out, hasn't been nothing made out of you; that you're just looking at a whole pool of nothing. It's an interesting rebuttal.
But pretended knowingness and pretended cause are blood brothers, not cousins, but brothers. And you find the two things coming up consistently and continually. You'll find somebody whose pretended—whose pretended knowingness is saturating his whole track from one end to the other.
And you get—you get to a point where he can't look at a monument without having ordered its erection. You got this? You see, his pretended knowingness goes along with having caused it. Now, when you start running into this, you're at the bottom of the not-know scale because it's a substitute know. you got the idea? It's a substitute know. It isn't a know.
Now, exactly how you handle that particular end of the game is very interesting because it isn't really a direct contact. It's very hard to make a direct contact at that end of the game, unless you go at it obliquely through the subject matter of problems.
The person has had so many problems that he has begun to substitute false solutions. And those false solutions are the pretended knowingness that you see on the case.
So, you actually don't process the pretended knowingness. What you do is process the guy for problems. Any Problems Process will cause such a pc to really get up on the step and fly. I don't care which one of the Problems Processes it is, but any one of them will just—will take off on this particular process. Because you enter it at the level of reality of what a problem is.
And then you'll find out, because you're handling the confrontingness or the existence of problems, all of a sudden these false solutions and pretended cause and that sort of thing fade out on the case. So problems are a very good approach on it.
1A, then, has very extended usages and can handle cases which are baffling you to this degree: You can say that if the case is baffling you, an excellent approach is to flatten 1A. Now, when I say flatten 1A, I mean to get the guy used to confronting unknowns.
When he was finally used to confronting unknowns, whether in the version of problems or otherwise, you would then have somebody who wasn't obsessively escaping from them. you would have somebody who was no longer experiencing superanxiety. You'd have somebody who wasn't experiencing "got to go," or "got to stay," "can't move," you know, "can't leave," "can't stay" or anything else. You've solved this. But it is the confrontingness of the unknown.
Jealousy is basically an inability to confront the unknown. Very possibly the absence of jealousy amongst the Polynesians is the fact that when infidelity—as it's called by the Anglo-Saxon—is accomplished in the hut, it is normally done in full view. See, there's nothing unknown about it. So jealousy becomes unknown in these particular zones and areas.
But where an unknown is racked up, you get jealousy and the sickness and so forth that somebody experiences over jealousy itself is not on the buttons of betrayal, is not on the buttons of this, on that, on the other thing.
And infinite numbers of explanations—we're just back to more smog. More smog and taxes and oil companies, you see. And all of these things are not quite related, but somehow or other the incidence of cancer in Los Angeles, you see, would come into all of this and so on. And just bzz. Wild explanations which just dot the landscape all connect together to an unknown. And the unknown is "Is she being faithful?" or, "Is he being faithful?" or, "Is he being unfaithful or not?" you know or, "Do they know something about the activities of my wife that I do not know?" You got—you got all these things? Unknowns. Unknowns, you know. "Is there something I don't know, that they know?"
And you get all these balanced knows and unknows And a person who gets literally sick about love, for instance, you know and he's all mixed up about all of this kind of thing—don't enter it on the basis of male and female. Has nothing to do with it. you could probably solve it on the basis of, oh, scarcity and abundance of women or men or something like this. But basically, it just comes down to inability to confront an unknown.
Now, that's a fundamental. Only this particular unknown has to do with the sexes. You see how you'd work this out?
So when a case is presenting a baffling aspect to you, make up your mind that you had better improve the case's ability to confront the unknown. And we're right back in Routine 1A. A method of approaching the unknown is, of course, through problems.
You just get him to start citing problems. "What problem could you confront?" "What problem would you rather not confront?" And so on and on and on and on and on. Doesn't matter what you're running. You're still running something that is on the border fringe of unknow. See? Not-known. So therefore, you would—you would get that thing mopped up, wouldn't you? 
All right. Why does a case suddenly dive into the middle of the bank and can't come out and won't come out and you can't plow the case out and you take dynamite, blasting powder, anything else you can possibly think of. . . What on earth would you say offhand would be the reason for this? Why does a case dive at his engrams? Why has a case got himself so glued into his bank? Why? Why? Well, it's just, why? I mean, the question itself, "Why?" answers it. The guy is unable to not ask why.
There's an unknown occurs in the incident. He gets some tiniest, slightest glimmer of the unknown and he dives right straight at the engram and there he goes. And you find another engram and he dives at this one. And you find another engram and he dives at that one. you find another engram and he dives at that one. And the next thing you know, you've got the most horrible mishmash you ever saw called a bank. Why?
The answer is he can't stand the question "Why?" That's all. He cannot confront an unknown.
In other words, he becomes very hectic at the idea that an unknown exists. It mustn't exist anyplace in the world. Well, the hell it mustn't! What'cha going to do? Run it totally on know? We can't. It's a stuck flow.
Here's an oddity though. His all-knowingnesses are invented knowingnesses. Even though you're in a body and your body is real, it isn't necessarily true. It is simply a know. But that know is invented. Somebody invented the idea of a body. you follow this?
Now, with the inability to confront an unknown, eventually you get into a state of inability to confront the known. You know, it's both sides of the same coin. And eventually you get somebody who can't confront. And then you'll have trouble with the person. So that to this person, any little tiny incident of the day or night becomes a problem that he dwells on.
He's outside. All of a sudden, he doesn't know whether he might have dropped his ballpoint outside the door or left it in the car. He doesn't have the ballpoint now. Did he leave it in the restaurant? Ah, is it here? Ah, did he have a ballpoint in the first place? Has he ever owned a ballpoint? And this just magnifies and magnifies. You get him in-session. You yourself say, "All right. Do you have a present time problem?"
"Well, I don't know where I put my ballpoint," he says very matter of factly, you see. you get a little fall on it.
You say, "Well, what about this ballpoint?"
And he says, "Well, I missed it."
And you say, "Well, do you have a present time problem now?" You don't get any fall. And you say, "Well, it couldn't be too much of a problem because it only concerns a ballpoint." And what you have totally overlooked is the fact that to him that much unknowingness is enough to send him through the roof.
And he sits there all through the session without telling you and thinks, 'Ballpoint? No, I didn't put it there in the car; I put it . . . " See, it isn't that the ballpoint is valuable at all. It's just the fact that there is an unknown. Where is this damn ballpoint? Got the idea? He's almost berserk on the whole idea.
You're not processing a person with a present time problem. You're processing someone with a craze, practically. And yet you as the auditor might say to yourself, "Well, that isn't much of a problem, so I won't pay much of—attention to it." Well, the bug factor is, how much of a problem is a problem to a pc? And that is all regulated by his ability to confront the unknown.
And if he can't confront anything that is unknown, you will find him totally glued all the way up and down the track, totally mishmashed into every engram he has ever contacted—personally, privately, by himself. He's— every time he ran into one, he goes zoooomp! Stuck, see. Got the idea?
All right. That's what you're trying to process. And of course, you're trying to get his attention off of something on to what you want to run or what should be run and his attention's stuck on his damn ballpoint.
And if you queried him, you'd find out that the last ballpoint that he had anything to do with was totally empty. And he didn't even have a refill for it and it wasn't the kind of ballpoint that could be refilled.
All right. That's what's stopping people from going to Clear. That's about all it is, too.
All right. Now, you could get something going like this. Now we're getting wicked. Now we're getting wicked. We could get something that would be as horrifying as this as a process. And this is a horrifying process:
"What unknown about an auditing session could you confront?" "What unknown about an auditing session would you rather not confront?" I don't care how many legs you put on it. you can run it just that far. And you get anybody who's having any very great difficulty auditing or just doesn't really think they ought to be auditing and they'll blow their skulls on it practically. It'll solve this difficulty. It'll solve the difficulty, wham-bam! And it is a specific process that you could run on an old-timer that doesn't really like to audit much anymore or somebody that's having a lot of difficulty learning how to audit or something like this. This would resolve on that exact process—is: "What unknown about an auditing session—?" Because, of course, the pc is sitting there being totally unknow.
And the fact that the pc has some unknowns is enough to drive the guy halfway around the bend. And he gets stuck up in every pc.
I know an old-time auditor that—I think he audits once in a while, but you can't get him to audit very much and he does a fly-about. Every time you hear of him someplace, he's someplace else. See, the intelligence never has time to get to you. I'm not talking about anybody that you know particularly. [it's an old-timer from South Africa.
Anyway, he picks up every pc's somatic. No matter what somatic the pc's Jot when he's auditing the pc, he'll pick it up. And he'll have it for two or three days—the usual settle-out period for restimulation. Why? Because it's a mystery. And just the fact that—"What is it?" Bang! And that's it; he's got it. You got the idea?
He just snaps terminals with these unknowns, instantly. Well, it'd half kill him to run this process on him. But he'd run it and he'd come up at the either end feeling fine and smelling like a daisy. This is just a specific application of a particular type of thing in its simplest form. That is a workable process. And it does handle, then, a specific thing.
All right, we've got somebody and he used to write and doesn't like to write anymore and we want to rehabilitate his writing. Use the same factor. 'What unknown about writing could you confront?"
"Whether the story's going to be bought, of course!" you see. And he—automatic. The unknowns. The unknowns have driven him out of it. Nothing else.
Eighteen lives ago the fellow could sure speak Arabic. Hasn't been able to speak much of it since. It go—turns on and off. Appears in Casablanca or something like that, asks a street beggar something, speaks Arabic. Startles the hell out of it, see. And then the next moment can't speak Arabic.
What's happening there? What's happening to somebody who can't learn German. Now, there are some unknowingnesses—German. Mm. One of these compound polysyllabic words or an irregular verb.
H.H. Monro remarks on a fellow being stomped to death by an elephant in a zoo that he was trying to teach German irregular verbs to. The fellow could make animals talk. you know the story.
Well, what is this? What's unknown about, not the German language so much, but "a German" would undoubtedly produce a considerable reaction there for the rehabilitation of a language, don't you see.
All right. Now, I'll give you another one. It is true that this is the case— this is—this is a truth here, as far as processing is concerned—that it is valences. Valences are packaged mass knowingnesses. And the treatment of a condition is an attempt to alter a valence without addressing the valence. And at no time can this occur.
You cannot, well—you cannot treat Mr. Joe Blow, if Mr. Joe Blow isn't present. You're trying to cure Joe Blow's arthritis, but Joe Blow isn't on this side of the planet. Maybe not even on this planet. You got the idea?
So you put some arthritis in a test tube or something, see. And I'll fool around with the calcium and so forth and you finally conclude there isn't much you can do about it and so on. And then this fellow is trying madly to do something about arthritis and he does something about arthritis, something about arthritis, arthritis and he finally has got arthritis. But he got arthritis. He was trying to cure Joe Blow's arthritis. Only you don't know that Joe Blow ever existed.
So, "What about arthritis could you forget?" and that sort of a thing would probably be a bit of a blind alley. You might get someplace with it.
Some process addressed directly at arthritis, just as such: Well, the probability is that unless you handle some mass, like an engram or something like that, that would cause jammed bones or something, you actually are not going to get anyplace with this arthritis. You got it? Because you are not addressing a character named Joe Blow who is basic on the chain of arthritis.
In other words, address the valence. Do not address the condition. It took me about fifteen years to find this out. So it's well worth filing behind your left ear. It's a good auditing rule. So, long lists of goals are not going to make anybody progress particularly, but long lists of valences could.
And I am now working on how to get rid of hidden standards—which is to say present time problems of long duration which people are using for standards as to whether auditing works or doesn't work—and the first process I have turned up with that has anything to do with this is one of the unknown processes and it runs like this. This would be a series of commands that you would run. And you understand that this is an experimental process, but I have every reason to believe that it would be quite a workable process. It's on the basis that—a treat-the-valence idea. In other words, get valences on the case. Don't get conditions.
You want to treat his arthritis, so you say, "Who or what might have arthritis?" "What isn't known about that person?" "What might you have done to him?" "What might you have withheld from him?" Four commands in a row. There is a method of using an unknown salted down with some other things and combined with this valence idea.
"Who or what?" It goes idiotic as this. "Who or what would have a case like yours?" Ohhh. "What isn't known about—." Whether he said "who," why, it'd be "him" or "her" or whatever it was, proper pronoun or "it." "What might you have done to him?" "What might you have withheld from him?" And you run a Security Check and an unknown and a valence identification, all in the same bucket. I don't say that that particular one will produce any particular marvelous results because the thing is too dug in on something like that. And you'll get it best on your Goals Terminal Assessment.
But we're talking about the handling of hidden standards. So this fellow has bad eyes. And we are very interested in this. And it's a good, beautiful, hidden standard. Now, we know how to get it on the Security Check. We say, "What shouldn't be seen?" you know. "What have you done that shouldn't be seen?" And that sort of thing. And just start checking them off and flatten it out on the meter, you see. We can do that. We've already done it—and practically had somebody's eyeballs rolling around on the floor, you know.
But let's look at this now from this other process line. Not necessarily neglecting the Security Check approach either. We do that, too.
But this person's got bad eyes, good hidden standard. Is his eyes getting better? Well, auditing's working. Eyes getting worse? Well—what the hell— it's a present time problem. He isn't being audited. He's sitting in a present time problem so you got to handle it, see?
All right. So you'd run something like this. "Who or what would have bad eyes?" I don't care what version of this you use. "What is unknown about that?" "the person?" "it?" "What might you with—have done to them?" 'What might you have withheld from them?" And you would just go on stripping off valences, valences, valences, valences, valences, valences, valences, valences and all of a sudden zzzzzzz! Something is going to happen with regard to his eyes. See?
I'm attacking this problem of hidden standard and attacking this problem of problems because these things are the primary holdups in clearing, you see. As you can see, because I've been telling you this in this lecture.
Anyway, there is an experimental process which undoubtedly would bear a lot of fruit. Now, you could probably get rid of all sorts of things. You could probably invent a whole route to Clear with just knowing about this particular facet, you see.
You've got hit-or-miss, hunt-and-punch sort of thing that could handle an awful lot of hidden standards. Well, this fellow is worried about a habit he's got. And he just keeps worrying about this habit he's got. Well, "Who or what would have that habit?" "What isn't known about it?"—or "him?" 'What might you've done to such a person?" "What might you have withheld from such a person?" And certainly we're going to get whole track God-knows-what, you see. But it's just going to be valences, valences, valences, valences, valences, valences, valences.
Now, there's one more rule that goes along with this, is for some reason or other—well, it actually substantiates the theory that a thetan is a mystery sandwich. If you run lots of unknow and not-know, I mean lots of it, you've got to remedy havingness. So stand by to remedy havingness if you're running lots of not-know—not-know, first postulate stuff. Because frankly the whole bank is becoming unglued.
Havingness will remedy much more rapidly and so on. But you've got to keep it jacked up or the pc is liable to get pretty nervous because you're taking bank off of him in broadsword slabs. And he's got to be able to reorient himself in the physical universe.
So therefore, it'd be an awfully good thing to find the Havingness and Confront Process early in processing in any event. At any convenient time early in processing. You find it too early and it's going to shift. But at any convenient time early in processing, find the pc's Havingness and Confront Processes, particularly since you are going to run some unknowns. Sooner or later, you will be running some unknown of some character or another on this pc and the second that you do this, you know that the havingness is going to drop and that you're going to have to stop the process every half an hour or so and remedy the fellow's havingness just to keep him flying. Okay?
So, it's a rule that goes along with it. That rule has been going along with Not-Knowingness for a very long time, by the way. Takes—terribly smooth auditing job to get around this and it takes a optimum environment for auditing and all that sort of thing never to have to remedy havingness on Not-Know. It'd just be superoptimum and nobody ever gets audited in a superoptimum atmosphere.
Okay? Well, now if you can wrap your ears—. Don't bother you wrap your brain around this stuff. I want it to be available. But if you can put some of these in practice, why, I think you will get some of these cases really off the launching pad and really rolling. Okay?
Thank you very much. 

