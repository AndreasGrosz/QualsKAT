  507  sudo dpkg -i /home/res/Downloads/hll8260cdwlpr-1.5.0-0.i386.deb
  508  sudo dpkg -i /home/res/Downloads/hll8260cdwcupswrapper-1.5.0-0.i386.deb
  509  sudo apt-get install -f
  510  sudo systemctl start cups
  511  sudo systemctl enable cups
  512  sudo nano /etc/cups/printers.conf
  513  # Stoppe den CUPS-Dienst
  514  sudo systemctl stop cups
  515  # Bearbeite die Druckerkonfigurationsdatei
  516  sudo nano /etc/cups/printers.conf
  517  # Starte den CUPS-Dienst neu
  518  sudo systemctl start cups
  519  sudo systemctl stop cups
  520  sudo nano /etc/cups/printers.conf
  521  sudo systemctl start cups
  522  sudo nano /etc/cups/printers.conf
  523  # Stoppe den CUPS-Dienst
  524  sudo systemctl stop cups
  525  # Setze die Standarddruckoptionen für Duplexdruck und Porträtmodus
  526  lpoptions -d Brother_HL-L8260CDW_SW -o sides=two-sided-long-edge
  527  lpoptions -d Brother_HL-L8260CDW_SW -o orientation-requested=3
  528  # Starte den CUPS-Dienst neu
  529  sudo systemctl start cups
  530  # Überprüfe die Konfiguration
  531  lpoptions -p Brother_HL-L8260CDW_SW
  532  # Setze den Standarddrucker
  533  lpoptions -d Brother_HL-L8260CDW_SW
  534  # Stoppe den CUPS-Dienst
  535  sudo systemctl stop cups
  536  # Bearbeite die Druckerkonfigurationsdatei
  537  sudo nano /etc/cups/printers.conf
  538  # Füge die Optionen hinzu und speichere die Datei
  539  # Option Duplex DuplexNoTumble
  540  # Option orientation-requested 3
  541  # Option sides two-sided-long-edge
  542  # Starte den CUPS-Dienst neu
  543  sudo systemctl start cups
  544  # Setze den Standarddrucker
  545  lpoptions -d Brother_HL-L8260CDW_SW
  546  dmesg | tail
  547  sudo dmesg | tail
  548  lsblk
  549  df -h
  550  sudo mount /dev/sda1 //media/res/HDD_AB
  551  sudo nano /etc/fstab
  552  sudo mount -a
  553  systemctl daemon-reload
  554  sudo nano /etc/updatedb.conf
  555  sudo updatedb
  556  locate -i reisepass
  557  locate -i superman
  558  locate
  559  clear
  560  locate 2305
  561  sudo apt update
  562  sudo apt install p7zip-full p7zip-rar
  563  diktat
  564  sudo apt import pyperclip
  565  sudo apt install pyperclip
  566  pip install pyperclip
  567  python3 -m venv venv
  568  source venv/bin/activate
  569  pip install pyperclip
  570  diktat
  571  pip install pyaudio
  572  locate -i hinwil
  573  pandoc
  574  sudo apt install pandoc
  575  pandoc "/media/res/HDD_AB/projekte/Bibliothek/Alexander Dugin/Alexander Dugin - Das Grosse Erwachen gegen den Great Reset-Arktos Media Ltd. (2021).pdf" -o ge.docx
  576  pip3 install pdf2docx
  577  pdf2docx convert "/media/res/HDD_AB/projekte/Bibliothek/Alexander Dugin/Alexander Dugin - Das Grosse Erwachen gegen den Great Reset-Arktos Media Ltd. (2021).pdf" ge.docx
  578  scan
  579  ocrmypdf -l deu --force-ocr "/home/res/Downloads/1 InBasket/justScanned/Alexander Dugin/Alexander Dugin - Das Grosse Erwachen gegen den Great Reset-Arktos Media Ltd. (2021).pdf" "/home/res/Downloads/1 InBasket/Alexander Dugin - Das Grosse Erwachen gegen den Great Reset-Arktos Media Ltd. (2021)_ocr.pdf"
  580  cd /home/res/Downloads/1 InBasket/justScanned/
  581  cd "/home/res/Downloads/1 InBasket/justScanned/"
  582  ls
  583  ocrmypdf -l deu --force-ocr "DGE.pdf" DGE_ocr.pdf
  584  ocrmypdf -l deu --force-ocr DGE.pdf DGE_ocr.pdf
  585  ls
  586  ocrmypdf -l deu --force-ocr DGE.pdf DGE_ocr.pdf
  587  scan
  588  dig wiseoldgoat.com.
  589  whois wiseoldgoat.com.
  590  firefox &
  591  python3 scrape-contacts-R1.py --language de --industry Baubiologe
  592  pip3 install pandas
  593  ### Run this script once
  594  ### Install virtualenv
  595  pip3 install virtualenv --user
  596  ### Create virtualenv
  597  python3 -m virtualenv venv
  598  ### Activate virtualenv
  599  source venv/bin/activate
  600  ### Upgrade pip
  601  pip install --upgrade pip
  602  ### Install libraries
  603  pip install -r requirements.txt
  604  python3 -m virtualenv venv
  605  pip3 install virtualenv --user
  606  python3 -m venv venv
  607  source venv/bin/activate
  608  pip install -r requirements.txt
  609  cd "/media/res/HDD_AB/projekte/kd0241-py/tel-search4contact data/"
  610  pip install -r requirements.txt
  611  ls
  612  pip3 install -r requirements.txt
  613  pip install -r requirements.txt
  614  python3 --version
  615  python3 -m venv venv
  616  source venv/bin/activate
  617  which pip
  618  pip install -r requirements.txt
  619  python3 scrape-contacts-R1.py
  620  pip install requests
  621  python3 scrape-contacts-R1.py
  622  pip install bs4
  623  python3 scrape-contacts-R1.py
  624  pip install pandas
  625  python3 scrape-contacts-R1.py
  626  pip install openpyxl
  627  python3 scrape-contacts-R1.py
  628  pip install openpyxl
  629  python3 scrape-contacts-R1.py
  630  python scrape-contacts-R1.py --language de --industry Baubiologe
  631  python scrape-contacts-R1.py --language DE --industry Baubiologe
  632  pip install lxml
  633  pip freeze > requirements.txt
  634  python scrape-contacts-R1.py --language DE --industry Baubiologe
  635  exit
  636  locate Yoga
  637  locate Yoga>dummy.txt
  638  locate Reisepass
  639  exit
  640  sudo apt update
  641  sudo apt install nodejs npm
  642  node -v
  643  npm -v
  644  ls
  645  cd qr-bill-project
  646  npm install
  647  npm run generate
  648  mkdir -p output
  649  npm run generate
  650  node index.js
  651  cd ..
  652  sudo find . -name "swissqrbill.min.js"
  653  find . -name "swissqrbill.min.js"
  654  find .. -name "swissqrbill.min.js"
  655  find /media/res/HDD_AB/projekte/kd0241-py//QRcode/wissqrbill-main -name "swissqrbill.min.js"
  656  find /media/res/HDD_AB/projekte/kd0241-py/QRcode/swissqrbill-main -name "swissqrbill.min.js"
  657  git clone https://github.com/schoero/swissqrbill.git
  658  cd swissqrbill
  659  npm install
  660  npm run build
  661  find /media/res/HDD_AB/projekte/kd0241-py/QRcode/swissqrbill-main -name "swissqrbill.min.js"
  662  npm install --save-dev webpack webpack-cli
  663  exit
  664  locate -i ftp
  665  locate -i FileZilla
  666  locate 5gfreich1
  667  locate 5gfreich
  668  sudo nano /etc/hosts
  669  sudo systemd-resolve --flush-caches
  670  sudo nano /etc/hosts
  671  diktat
  672  locate -i publicare
  673  exit
  674  python scrape-contacts-R3.py --language DE --keylist stichwortliste-baubio.txt
  675  python3 scrape-contacts-R3.py --language DE --keylist stichwortliste-baubio.txt
  676  pip install pandas
  677  source venv/bin/activate
  678  python3 scrape-contacts-R3.py --language DE --keylist stichwortliste-baubio.txt
  679  python3 scrape-contacts-R4.py --language DE --keylist stichwortliste-baubio.txt
  680  python3 scrape-contacts-R5.py --language DE --keylist stichwortliste-baubio.txt
  681  python3 scrape-contacts-R5.py
  682  python3 scrape-contacts-R5.py --language DE --keylist stichwortliste-baubio.txt
  683  python3 scrape-contacts-R6.py --language FR --keylist stichwortliste-baubio.txt
  684  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio.txt
  685  clear
  686  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio.txt
  687  clear
  688  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio.txt
  689  clear
  690  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio.txt
  691  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio.txt --industry Baubio
  692  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio.txt --industry Baubio --kanton GE
  693  clear
  694  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio.txt 
  695  clear
  696  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio.txt 
  697  python3 scrape-contacts-R7.py --language IT --keylist stichwortliste-baubio.txt 
  698  python3 scrape-contacts-R7.py --language DE --keylist stichwortliste-baubio.txt 
  699  python3 scrape-contacts-R7.py --language IT --keylist stichwortliste-baubio-IT.txt 
  700  python3 scrape-contacts-R7.py --language FR --keylist stichwortliste-baubio-FR.txt 
  701  clear
  702  python3 scrape-contacts-R8.py --language IT --keylist stichwortliste-baubio-IT.txt 
  703  python3 scrape-contacts-R8.py --language IT --keylist stichwortliste-baubio.txt 
  704  python3 scrape-contacts-R8.py --language FR --keylist stichwortliste-baubio.txt 
  705  python3 scrape-contacts-R8.py --language DE --keylist stichwortliste-baubio.txt 
  706  deactivate
  707  cd ..
  708  ls
  709  cd mail-from-websites
  710  python3 -m venv venv
  711  source venv/bin/activate
  712  pip install -r requirements.txt
  713  python3 site2mail-R1.py
  714  pip install pandas
  715  python3 site2mail-R1.py
  716  pip install tqdm
  717  python3 site2mail-R1.py
  718  pip install loguru
  719  python3 site2mail-R1.py
  720  pip install bs4
  721  python3 site2mail-R1.py
  722  pip install selenium
  723  python3 site2mail-R1.py
  724  pip install tldextract
  725  python3 site2mail-R1.py
  726  pip install langdetect
  727  python3 site2mail-R1.py
  728  pip uninstall selenium
  729  pip install selenium==3.141.0
  730  python3 site2mail-R1.py
  731  which chromedriver
  732  export PATH=$PATH:chromedriver
  733  which chromedriver
  734  python3 site2mail-R1.py
  735  export PATH=$PATH:/media/res/HDD_AB/projekte/kd0241-py/mail-from-websites/chromedriver
  736  python3 site2mail-R1.py
  737  rm /home/res/.local/lib/python3.8/site-packages/chromedriver/chromedriver
  738  sudo apt-get update
  739  sudo apt-get install -y unzip
  740  wget -N http://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip
  741  unzip chromedriver_linux64.zip
  742  sudo mv -f chromedriver /usr/local/bin/chromedriver
  743  sudo chmod +x /usr/local/bin/chromedriver
  744  python3 site2mail-R1.py
  745  pip install --upgrade urllib3
  746  which chromedriver
  747  python3 site2mail-R1.py
  748  pip freeze > requirements.txt
  749  pip uninstall -r requirements.txt -y
  750  pip install -r requirements210924.txt
  751  pip uninstall -r requirements210924.txt
  752  pip install -r requirements210924.txt
  753  sudo apt-get install python3-distutils
  754  pip install setuptools wheel
  755  sudo add-apt-repository ppa:deadsnakes/ppa
  756  sudo apt-get update
  757  sudo apt-get install python3.7 python3.7-venv python3.7-dev
  758  python3.7 -m venv venv37
  759  source venv37/bin/activate
  760  pip install setuptools wheel
  761  pip install -r requirements210924.txt
  762  python3 site2mail-R1.py
  763  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  764  sudo apt install ./google-chrome-stable_current_amd64.deb
  765  google-chrome --version
  766  python3 site2mail-R1.py
  767  python3 site2mail-R1.py --input industry-baubio-dedup-IT-2.csv
  768  clear
  769  python3 site2mail-R1.py --input industry-baubio-dedup-IT-2.csv >terminal.log
  770  python3 site2mail-R2.py --input industry-baubio-dedup-IT-2.csv >terminal2.log
  771  python3 site2mail-R3.py --input industry-baubio-dedup-IT-2.csv >terminal2.log
  772  where chromedriver
  773  whereis chromedriver
  774  python3 site2mail-R3.py --input industry-baubio-dedup-IT-2.csv >terminal2.log
  775  python3 site2mail-R3.py --input industry-baubio-test.csv >terminal2.log
  776  python3 site2mail-R2.py --input industry-baubio-test.csv >terminal2.log
  777  whereis chromedriver
  778  python3 site2mail-R2.py --input industry-baubio-test.csv >terminal2.log
  779  python3 site2mail-R2.py --input industry-baubio-test.csv >terminal3.log
  780  python3 site2mail-R3.py --input industry-baubio-test2.csv >terminal3.log
  781  python3 site2mail-R3.py --input industry-baubio-test2.csv >terminal4.log
  782  python3 site2mail-R3.py --input industry-baubio-test2.csv >terminal5.log
  783  python3 site2mail-R3.py --input industry-baubio-test2.csv >terminal6.log
  784  python3 site2mail-R3.py --input industry-baubio-test2.csv >terminal7.log
  785  python3 site2mail-R4.py --input industry-baubio-test2.csv >terminal7.log
  786  python3 site2mail-R2.py --input industry-baubio-test2.csv >terminal8.log
  787  python3 site2mail-R2.py --input industry-baubio-dedup-IT-2.csv >terminal9.log
  788  pip freeze > requirements37.txt
  789  python3 site2mail-R2.py --input baubio-DE.csv >terminal10.log
  790  python3 site2mail-R2.py --input baubio-FR.csv >terminal10.log
  791  dig qr.andreasmbgross.ch
  792  ping qr.andreasmbgross.ch
  793  sudo systemd-resolve --flush-caches.
  794  sudo resolvectl flush-caches
  795  dig andreasmbgross.ch/
  796  ping andreasmbgross.ch/[1;5D
  797  whois andreasmbgross.ch/[1;5D
  798  whois andreasmbgross.ch
  799  ping andreasmbgross.ch
  800  ping qr.andreasmbgross.ch
  801  sudo resolvectl flush-caches
  802  firefox &
  803  exit
  804  python3 tabs-relation.py
  805  pip3 install pandas
  806  python3 -m venv venv
  807  source venv/bin/activate
  808  pip3 install pandas
  809  python3 tabs-relation.py
  810  exit
  811  setxkbmap -layout ch
  812  nano ~/.Xmodmap
  813  sudo nano  /etc/X11/xorg.conf.d/00-keyboard.conf
  814  nano ~/.Xmodmap
  815  äöüàéè{´[
  816  xmodmap ~/.Xmodmap
  817  nano ~/.Xmodmap
  818  xmodmap -pke
  819  nano ~/.Xmodmap
  820  gedit ~/.Xmodmap
  821  kate ~/.Xmodmap
  822  xmodmap ~/.Xmodmap
  823  äöüÄÖÜ{[]}
  824  xmodmap ~/.Xmodmap
  825  pip install python-docx
  826  /media/res/HDD_AB/projekte/kd0241-py/Einsprache/Website/
  827  cd "/media/res/HDD_AB/projekte/kd0241-py/Einsprache/Website/"
  828  python3 -m venv venv
  829  pip install python-docx
  830  source venv/bin/activate
  831  pip install python-docx
  832  ls
  833  cd cgi-bin
  834  deactivate
  835  python3 -m venv venv
  836  source venv/bin/activate
  837  pip install python-docx
  838  echo $VIRTUAL_ENV
  839  python --version
  840  pip show  python-docx
  841  pip freeze
  842  pip install --upgrade lxml
  843  python3 generate.py
  844  pip install --upgrade python-docx
  845  python3 generate.py
  846  pip uninstall python-docx
  847  pip install python-docx==0.8.11
  848  python3 generate.py
  849  pip show lxml
  850  python3 generate.py
  851  python3 test_lxml.py
  852  pip show lxml
  853  sudo apt-get install libxml2 libxml2-dev libxslt1.1 libxslt1-dev
  854  python3 test_lxml.py
  855  deactivate  # Falls du gerade in einem virtuellen Environment bist
  856  rm -rf venv  # Entferne das alte virtuelle Environment
  857  virtualenv -p /usr/bin/python3.6 venv  # Erstelle ein neues virtuelles Environment mit Python 3.6
  858  source venv/bin/activate  # Aktiviere das neue virtuelle Environment
  859  pip install lxml python-docx  # Installiere die benötigten Pakete
  860  deactivate  # Falls du gerade in einem virtuellen Environment bist
  861  rm -rf venv  # Entferne das alte virtuelle Environment
  862  python3.6 -m venv venv  # Erstelle ein neues virtuelles Environment mit Python 3.6
  863  sudo apt-get install python3.6 python3.6-venv
  864  sudo add-apt-repository ppa:deadsnakes/ppa
  865  sudo apt-get update
  866  sudo apt-get install python3.6 python3.6-venv
  867  sudo apt-get install python3.6 python3.6-dev python3.6-distutils
  868  sudo apt-get update
  869  sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev curl
  870  cd /usr/src
  871  sudo curl -O https://www.python.org/ftp/python/3.6.15/Python-3.6.15.tgz
  872  sudo tar xzf Python-3.6.15.tgz
  873  cd Python-3.6.15
  874  sudo ./configure --enable-optimizations
  875  sudo make altinstall
  876  cd /media/res/HDD_AB/projekte/kd0241-py/Einsprache/Website/cgi-bin/
  877  python3 -m venv venv
  878  source venv/bin/activate
  879  python3.6 --version
  880  deactivate
  881  python3.6 -m venv venv
  882  deactivate
  883  python3 -m venv venv
  884  source venv/bin/activate
  885  pip install docxtpl
  886  python3 gererate.py
  887  python3 generate.py
  888  python3 generate2.py
  889  python3 generate2.py >error.log
  890  python3 generate2.py 
  891  deactivate
  892  python3.6 -m venv venv
  893  pip install virtualenv
  894  sudo apt install pipx
  895  pipx install virtualenv
  896  pipx run virtualenv venv
  897  source venv/bin/activate
  898  pip install docxtpl jinja2
  899  deactivate
  900  zip -r venv.zip venv
  901  locate -i AIR3268
  902  npm list -g --depth=0
  903  npm uninstall -g webpack webpack-cli
  904  npm uninstall webpack webpack-cli
  905  npm uninstall --save-dev babel-loader @babel/core @babel/preset-env
  906  sudo apt-get purge --auto-remove nodejs
  907  sudo apt-get purge --auto-remove npm
  908  tail -f /var/log/syslog
  909  sudo apt update && sudo apt upgrade
  910  sudo apt update
  911  sudo apt install myspell-de-ch
  912  ls /usr/share/hyphen/
  913  sudo apt install myspell-de-CH
  914  sudo apt install hyphen-de
  915  locate -i feso4
  916  firefox &
  917  sudo apt install kompare
  918  whois www.neue-medizin.ch 
  919  whois neue-medizin.ch 
  920  cd "/media/res/HDD_AB/projekte/kd0241-py/diktat-py/"
  921  python3 -m venv venv
  922  source venv/bin/activate
  923  python3 transcribe_streaming_infinite_R3.py
  924  pip intall pyperclip
  925  pip install pyperclip
  926  python3 transcribe_streaming_infinite_R3.py
  927  pip install pyaudio
  928  sudo apt-get install portaudio19-dev
  929  pip install pyaudio
  930  python3 transcribe_streaming_infinite_R3.py
  931  pip install --upgrade google-cloud-speech
  932  python3 transcribe_streaming_infinite_R3.py
  933  pip freeze > requirements.txt
  934  nano ~/.bashrc
  935  cd ~
  936  diktat
  937  deactivate
  938  diktat
  939  kate
  940  nano ~/.bashrc
  941  diktat
  942  'source /media/res/HDD_AB/projekte/kd0241-py/diktat-py/activate && python3 /media/res/HDD_AB/projekte/kd0241-py/diktat-py/transcribe_streaming_infinite_R3.py'
  943  source /media/res/HDD_AB/projekte/kd0241-py/diktat-py/activate && python3 /media/res/HDD_AB/projekte/kd0241-py/diktat-py/transcribe_streaming_infinite_R3.py
  944  source /media/res/HDD_AB/projekte/kd0241-py/diktat-py/venv/bin/activate && python3 /media/res/HDD_AB/projekte/kd0241-py/diktat-py/transcribe_streaming_infinite_R3.py
  945  Ja, diesmal klappt es warum auch nicht, oder?
  946  nano ~/.bashrc
  947  diktat
  948  locate audio2text.py
  949  locate audio2text
  950  locate whisper
  951  clear
  952  locate whisper
  953  whisper
  954  python3 whisper
  955  pip install openai-whisper
  956  exit
  957  pip install pyinstaller
  958  source venv/bin/activate 
  959  pip install pyinstaller
  960  pyinstaller --onefile antennendistanz-R2.py
  961  chmod +x dist/antennendistanz-R2
  962  dist/antennendistanz-R2 678 1200 "Test-Chamerstrasse-120.csv" "47.1807372, 8.4856152"
  963  pip freeze > requirements.txt
  964  exit
  965  python3 antennendistanz.py
  966  python3 -m venv venv
  967  source venv/bin/activate
  968  python3 antennendistanz.py
  969  pip install pandas
  970  python3 antennendistanz.py
  971  pip install geopy
  972  python3 antennendistanz.py
  973  python3 antennendistanz.py 678 1200 "Adressen alle 250 Einsprecher Chamerstrasse 120.ods" "Zug Chamerstrasse 120"
  974  pip install odfpy
  975  python3 antennendistanz.py 678 1200 "Adressen alle 250 Einsprecher Chamerstrasse 120.ods" "Zug Chamerstrasse 120"
  976  pip install opencage
  977  python3 antennendistanz.py 678 1200 "Test-Chamerstrasse-120.csv" "47.1807372, 8.4856152"
  978  pip install requests
  979  python3 antennendistanz.py 678 1200 "Test-Chamerstrasse-120.csv" "47.1807372, 8.4856152"
  980  python3 antennendistanz.py 678 1200 "Test-Chamerstrasse-120.csv"
  981  python3 antennendistanz.py 678 1200 "Adressen alle 250 Einsprecher Chamerstrasse 120.xlsx" "Zug Chamerstrasse 120"
  982  pip install openpyxl
  983  python3 antennendistanz.py 678 1200 "Adressen alle 250 Einsprecher Chamerstrasse 120.xlsx" "Zug Chamerstrasse 120"
  984  python3 antennendistanz.py 678 1200 "5G Adressen11.ods" "Zug Chamerstrasse 120"
  985  python3 antennendistanz.py 678 1200 "Test-Chamerstrasse-120.csv" "47.1807372, 8.4856152"
  986  python3 antennendistanz-R1.py 678 1200 "Test-Chamerstrasse-120.csv" "47.1807372, 8.4856152"
  987  python3 antennendistanz-R1.py 678 1200 "5G Adressen11.ods" "Zug Chamerstrasse 120"
  988  python3 antennendistanz-R2.py 678 1200 "5G Adressen11.ods" "Zug Chamerstrasse 120"
  989  python3 antennendistanz-R1.py 678 1200 "Test-Chamerstrasse-120.csv" "47.1807372, 8.4856152"
  990  exit
  991  cd "/media/res/HDD_AB/projekte/kd0241-py/Geoinfo 5G-CH  v BAKOM/Präsentationen/"
  992  ffmpeg -i simplescreenrecorder-2024-07-13_21.12.31.mkv -c copy output.mp4
  993  ffmpeg -i simplescreenrecorder-2024-07-13_21.12.31.mkv  -ss 00:00:09  -c copy output.mp4
  994  ffmpeg -ss 00:00:09 -i simplescreenrecorder-2024-07-13_21.12.31.mkv -vcodec mjpeg -acodec pcm_s16le output2.avi
  995  ffmpeg -i simplescreenrecorder-2024-07-13_21.37.13.mkv -vcodec mjpeg -acodec pcm_s16le output3.avi
  996  cd ~
  997  locate -i dall-e
  998  diktat
  999  deactivate
 1000  diktat
 1001  deactivate
 1002  diktat
 1003  deactivate
 1004  diktat
 1005  deactivate
 1006  ssh res@Akoya-Webserver
 1007  exit
 1008  locate -i alfresco
 1009  clear
 1010  locate -i akoya-webserver
 1011  locate -i akoya
 1012  ssh res@thinkpad-e460
 1013  ssh res@res-thinkpad-e460
 1014  exit
 1015  ping https://stdb-calc.5gfrei.ch/
 1016  ping stdb-calc.5gfrei.ch
 1017  exit
 1018  cd ~
 1019  cd Downloads
 1020  whisper 
 1021  whisper --help
 1022  which python
 1023  which pip
 1024  which python
 1025  which python3
 1026  pip show whisper
 1027  pip uninstall whisper
 1028  locate whisper_env
 1029  exit
 1030  python3 -m venv whisper_env
 1031  source whisper_env/bin/activate
 1032  pip install git+https://github.com/openai/whisper.git
 1033  whisper --help
 1034  ls
 1035  whisper  Wurzelkanal-Lüge.mp4 --output_format all
 1036  cd ~
 1037  ssh res@res-thinkpad-e460
 1038  exit
 1039  eb
 1040  sudo cp '/home/res/projekte/kd0089 my eBib & DMS/cns/eb' /usr/local/bin
 1041  sudo cp eb /usr/local/bin
 1042  eb
 1043  sudo cp eb /usr/local/bin
 1044  eb
 1045  eb datenserie
 1046  exit
 1047  pip freeze > requirements.txt
 1048  source venv/bin/activate
 1049  pip freeze > requirements.txt
 1050  exit
 1051  diktat
 1052  deactivate
 1053  nano ~/.bashrc
 1054  ping einsprachen.5gfrei.ch
 1055  ssh res@akoya-webserver
 1056  eb datenserie
 1057  firefox &
 1058  cd "/media/res/HDD_AB/projekte/kd0241-py/Einsprache/cgi-bin/"
 1059  source venv/bin/activate
 1060  pip install flask
 1061  pip freeze > requirements.txt
 1062  deactivate
 1063  cd..
 1064  cd ..
 1065  ls
 1066  cd website
 1067  source venv/bin/activate
 1068  python3 -m venv venv
 1069  source venv/bin/activate
 1070  pip install flask
 1071  python3 generate.py
 1072  pip install docxtpl
 1073  python3 generate.py
 1074  pip freeze > requirements.txt
 1075  nano app.py
 1076  python3 app.py
 1077  python3 send_test_email.py
 1078  python3 app.py
 1079  python3 send_test_email.py
 1080  python3 app.py
 1081  pip install -r requirements.txt
 1082  ping einsprachen.5gfrei.ch
 1083  python3 app.py
 1084  docker-compose build
 1085  docker-compose up -d
 1086  sudo apt  install docker-compose 
 1087  docker-compose build
 1088  docker --version
 1089  docker-compose --version
 1090  sudo apt-get update
 1091  sudo apt-get install docker-ce docker-ce-cli containerd.io
 1092  sudo apt-get remove docker docker-engine docker.io containerd runc
 1093  sudo apt-get update
 1094  sudo apt-get install ca-certificates curl gnupg lsb-release
 1095  # Docker’s official GPG key hinzufügen
 1096  sudo mkdir -p /etc/apt/keyrings
 1097  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 1098  # Füge das Docker-Repository hinzu
 1099  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
 1100    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1101  sudo apt-get update
 1102  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
 1103  docker-compose --version
 1104  docker --version
 1105  docker-compose up
 1106  sudo rm /usr/local/bin/docker-compose
 1107  sudo curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
 1108  sudo chmod +x /usr/local/bin/docker-compose
 1109  docker-compose --version
 1110  which docker-compose
 1111  sudo rm /usr/local/bin/docker-compose
 1112  which docker-compose
 1113  sudo rm /usr/bin/docker-compose
 1114  which docker-compose
 1115  sudo curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
 1116  sudo chmod +x /usr/local/bin/docker-compose
 1117  docker-compose --version
 1118  which docker-compose
 1119  docker-compose --version
 1120  docker-compose up
 1121  echo $PATH
 1122  ls -l /usr/local/bin/docker-compose
 1123  sudo chmod +x /usr/local/bin/docker-compose
 1124  docker-compose --version
 1125  hash -r
 1126  /usr/local/bin/docker-compose --version
 1127  docker-compose build
 1128  docker-compose up -d
 1129  exit
 1130  source venv/bin/activate
 1131  source venv37/bin/activate
 1132  python site2mail-R4.py testdaten.csv
 1133  python site2mail-R4.py --input testdaten.csv
 1134  python site2mail-R5.py --input testdaten.csv
 1135  clear
 1136  python site2mail-R5.py --input testdaten.csv
 1137  clear
 1138  python site2mail-R5.py --input "Lokale Gruppen per SVS Website.csv"
 1139  clear
 1140  python site2mail-R5.py --input "Lokale Gruppen per SVS Website.csv" >wcraping-errors.log
 1141  clear
 1142  cd ~
 1143  locate -i hypnotist
 1144  deactivate
 1145  sudo sh -c 'echo "deb https://deb.torproject.org/torproject.org $(lsb_release -cs) main" >> /etc/apt/sources.list.d/tor.list'
 1146  curl https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --import
 1147  gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | sudo apt-key add -
 1148  sudo apt update
 1149  sudo apt install tor deb.torproject.org-keyring
 1150  lsb_release -a
 1151  sudo apt update
 1152  sudo apt install tor
 1153  sudo systemctl start tor
 1154  sudo systemctl status tor
 1155  torsocks wget -qO- https://ipecho.net/plain
 1156  sudo apt install torsocks
 1157  torsocks wget -qO- https://ipecho.net/plain
 1158  torsocks curl https://ipecho.net/plain
 1159  sudo journalctl -u tor.service
 1160  torsocks curl https://icanhazip.com
 1161  torsocks curl https://www.google.com
 1162  sudo cat /var/log/tor/log
 1163  cat /etc/tor/torrc
 1164  sudo journalctl -u tor.service -e
 1165  Log notice file /var/log/tor/notices.log
 1166  log notice file /var/log/tor/notices.log
 1167  sudo nano /etc/tor/torrc
 1168  sudo systemctl restart tor
 1169  sudo add-apt-repository ppa:micahflee/ppa
 1170  sudo apt update
 1171  sudo apt install torbrowser-launcher
 1172  sudo add-apt-repository --remove ppa:micahflee/ppa
 1173  sudo apt update
 1174  sudo nano /etc/apt/sources.list.d/tor.list
 1175  sudo apt update
 1176  sudo nano /etc/apt/sources.list.d/mozilla-team-ppa.list
 1177  sudo locate mozilla-team-ppa.list
 1178  grep -r "ppa.launchpadcontent.net/mozillateam" /etc/apt/
 1179  sudo nano /etc/apt/sources.list.d/mozillateam-ubuntu-ppa-noble.sources
 1180  sudo apt update
 1181  sudo cat /etc/apt/sources.list.d/mozillateam-ubuntu-ppa-noble.sources
 1182  sudo rm /etc/apt/sources.list.d/mozillateam-ubuntu-ppa-noble.sources
 1183  sudo apt update
 1184  apt list --upgradable
 1185  clear
 1186  sudo apt full-upgrade
 1187  ./start-tor-browser.desktop
 1188  sudo apt install ProtonVPN
 1189  sudo protonvpn c --cc JP
 1190  https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.3-3_all.deb
 1191  wget https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.3-3_all.deb
 1192  sudo dpkg -i ./protonvpn-stable-release_1.0.3-3_all.deb && sudo apt update
 1193  sudo protonvpn c --cc JP
 1194  protonvpn c
 1195  protonvpn-cli login <Dein ProtonVPN-Benutzername>
 1196  protonvpn-cli login res-gross@ProtonMail.ch
 1197  protonvpn-cli c
 1198  sudo apt install proton-vpn-gnome-desktop
 1199  sudo apt update && sudo apt upgrade
 1200  protonvpn-cli c
 1201  protonvpn
 1202  sudo protonvpn init
 1203  exit
 1204  source venv/bin/activate
 1205  python3 app-R4.py
 1206  python3 app-R5.py
 1207  exit
 1208  source venv37/bin/activate
 1209  python3 site2mail-R2.py SVS-Website.csv
 1210  python3 site2mail-R2.py --input SVS-Website.csv
 1211  python3 site2mail-R2.py --input "Lokale Gruppen per SVS Website.csv"
 1212  python3 site2mail-R3.py --input "testdaten.csv"
 1213  python3 site2mail-R3.py --input "Lokale Gruppen per SVS Website.csv"
 1214  python3 site2mail-R4.py --input "testdaten.csv"
 1215  exit
 1216  sudo protonvpn-cli disconnect
 1217  sudo systemctl restart networking
 1218  sudo systemctl restart networkmanager
 1219  ip a
 1220  sudo systemctl restart network-manager
 1221  sudo service network-manager restart
 1222  sudo service networkmanager restart
 1223  source whisper_venv/bin/activate
 1224  source whisper_env/bin/activate
 1225  whisper --help
 1226  ls
 1227  whisper Mind-Control-Today-by-5G.mp4 --output_format all
 1228  firefox &
 1229  exit
 1230  rm -rf ~/tor-browser*
 1231  cd programme
 1232  tar -xvJf tor-browser-linux64-*.tar.xz
 1233  cd tor-browser_*
 1234  ./start-tor-browser.desktop
 1235  tar -xvJf tor-browser-linux-x86_64-13.5.1.tar.xz
 1236  ./start-tor-browser.desktop
 1237  htop
 1238  locate -i "Short Links"
 1239  eb "Hubbard Dissemination Course"
 1240  eb "Dissemination Course"
 1241  eb  5406C16 
 1242  eb "Contact With the Public"
 1243  locate -i freiescientologen
 1244  cd ..
 1245  cd downloads
 1246  cd Downloads
 1247  whisper --help
 1248  exit
 1249  sudo apt install pavucontrol
 1250  pavucontrol
 1251  find ~ -type f -name "*.odp" -mtime -3
 1252  find ~ -type f -name "*.odp" -mtime -6
 1253  find ~ -type f -name "*.odp" -mtime -7
 1254  find /media/res/HDD_AB/projekte/kd0236-5Gfrei/ -type f -name "*.odp" -mtime -7
 1255  find /media/res/HDD_AB/projekte/kd0236-5Gfrei/ -type f -name "*.odp" -mtime -9
 1256  find "/media/res/HDD_AB/projekte -type f -name "*.odp" -mtime -9
 1257  exit
 1258  firefox &
 1259  eb normandy
 1260  eb manieren
 1261  exit
 1262  diktat
 1263  exit
 1264  nano create_folders.sh
 1265  chmod +x create_folders.sh
 1266  ./create_folders.sh
 1267  cd ~
 1268  locate -i RKI-FILES
 1269  locate -i RKI
 1270  eb danger
 1271  diktat
 1272  locate -i miscavige
 1273  cd "/media/res/HDD_AB/projekte/kd0084 my Scn Rehab/Analysen BE & ME/Mission Earth Analyse/"
 1274  grep -rin "Ararat" *.txt
 1275  cd "/media/res/HDD_AB/projekte/kd0084 my Scn Rehab/Analysen BE & ME/Mission Earth Analyse/py ME divided in parts/"
 1276  source venv/bin/activate
 1277  python3 split_parts_R04.py
 1278  exit
 1279  python -m venv env
 1280  source env/bin/activate  # Für macOS/Linux
 1281  env\Scripts\activate  # 
 1282  python3 -m venv env
 1283  source env/bin/activate  # Für macOS/Linux
 1284  pip install -r requirements.txt
 1285  python3  classifier.py authorlist -approach 
 1286  pip install nltk
 1287  pip install -r requirements.txt
 1288  python3  classifier.py authorlist -approach 
 1289  pip install -r requirements.txt
 1290  pip install huggingface_hub
 1291  python3  classifier.py authorlist -approach 
 1292  pip install -r requirements.txt
 1293  python3 --version
 1294  pip install torch torchvision torchaudio
 1295  eb ksw1
 1296  python3  classifier.py authorlist -approach 
 1297  pip install transformers
 1298  python3  classifier.py authorlist -approach 
 1299  pip install pandas
 1300  python3  classifier.py authorlist -approach 
 1301  pip install evaluate
 1302  python3  classifier.py authorlist -approach 
 1303  pip freeze > requirements.txt
 1304  python3 classifier.py authorlist -approach discriminative
 1305  pip install sklearn
 1306  pip install scikit-learn
 1307  python -c "import sklearn; print(sklearn.__version__)"
 1308  python3 classifier.py authorlist -approach discriminative
 1309  pip install accelerate -U
 1310  python3 classifier.py authorlist -approach discriminative
 1311  python3 classifier-commented.py authorlist -approach discriminative
 1312  python3 classifier-R1.py authorlist -approach discriminative
 1313  export HUGGINGFACE_HUB_TOKEN="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"
 1314  python3 classifier-R2.py authorlist -approach discriminative
 1315  pip freeze > requirements.txt
 1316  python3 classifier-R3.py authorlist -approach discriminative
 1317  exit
 1318  python3 split_parts_R04.py
 1319  pip3 import word2number
 1320  pip3 install word2number
 1321  cd "word2number"
 1322  cd "py ME divided in parts"
 1323  python3 -m venv venv
 1324  source venv/bin/activate
 1325  pip3 install word2number
 1326  python3 split_parts_R04.py
 1327  lsusb
 1328  exit
 1329  python3 -m venv venv
 1330  source venv/bin/activate
 1331  python3 eb.py
 1332  pip install odf
 1333  pip install opendocument
 1334  python3 eb.py
 1335  nano requirements.txt
 1336  pip install -r requirements.txt
 1337  python3 eb.py
 1338  python3 eb.py "rons journal"
 1339  chmod +x eb.py
 1340  python3 eb.py "rons journal"
 1341  locate Kombi-ebib-RONSCH-v026.tsv
 1342  python3 eb.py "rons journal"
 1343  nano ~/.bashrc
 1344  echo "alias eb='cd /media/res/HDD_AB/projekte/kd0241-py/eb && source venv/bin/activate && python3 eb.py \"\$1\" && deactivate && cd ~'" >> ~/.bashrc
 1345  nano ~/.bashrc
 1346  source ~/.bashrc
 1347  nano ~/.bashrc
 1348  eb "arc break"
 1349  clear
 1350  eb "arc break"
 1351  cat ~/.bashrc
 1352  nano ~/.bashrc
 1353  eb "arc break"
 1354  source ~/.bashrc
 1355  source venv/bin/activate
 1356  eb "arc break"
 1357  eb "break"
 1358  cat ~/.bashrc
 1359  python3 eb.py "arc break"
 1360  eb "arc break"
 1361  nano ~/.bashrc
 1362  eb "arc break"
 1363  source ~/.bashrc
 1364  source venv/bin/activate
 1365  eb "arc break"
 1366  nano eb_wrapper.sh
 1367  chmod +x /media/res/HDD_AB/projekte/kd0241-py/eb/eb_wrapper.sh
 1368  nano ~/.bashrc
 1369  source ~/.bashrc
 1370  source venv/bin/activate
 1371  eb "arc break"
 1372  5~
 1373  exit
 1374  cd ..
 1375  find . -iname '*.doc' -exec libreoffice --headless --convert-to txt:Text '{}' \;
 1376  find . -iname '*.doc' -exec sh -c 'echo "Konvertiere {}"; libreoffice --headless --convert-to txt:Text "{}" && echo "Fertig: {}"' \;
 1377  clear
 1378  find . -iname '*.doc' -exec sh -c 'echo "Konvertiere $1"; libreoffice --headless --convert-to txt:Text --outdir "$(dirname "$1")" "$1" && echo "Fertig: $1"' sh {} \;
 1379  find . -iname '*.docx' -exec sh -c 'echo "Konvertiere $1"; libreoffice --headless --convert-to txt:Text --outdir "$(dirname "$1")" "$1" && echo "Fertig: $1"' sh {} \;
 1380  source ~/.bashrc
 1381  cd..
 1382  cd ..
 1383  source ~/.bashrc
 1384  source venv/bin/activate
 1385  deactivate
 1386  source venv/bin/activate
 1387  git add.
 1388  git add .
 1389  git commit -m "nach umfrangreichen edits um die Verwirrung um die 39 categorien zu klären. Denn da ist bislang noch der Wurm drin. Vor dem Test von --train"
 1390  git push
 1391  python main.py --train --quick
 1392  clear
 1393  python main.py --train --quick
 1394  nano ~/.bashrc
 1395  python main.py --train --quick
 1396  source ~/.bashrc
 1397  source venv/bin/activate
 1398  clear
 1399  python main.py --train --quick
 1400  git add .
 1401  git commit -m "paar bugs behoben und dann funkte --train small. vor dem grossen lauf v --train"
 1402  git push
 1403  clear
 1404  python main.py --train 
 1405  clear
 1406  python main.py --train 
 1407  python3 update-categories.py
 1408  clear
 1409  python3 main.py --train 
 1410  5~
 1411  python main.py --checkthis --quick
 1412  sudo apt install pandoc
 1413  sudo apt install zettlr
 1414  sudo apt install typora
 1415  snap install typora
 1416  python main.py --checkthis 
 1417  clear
 1418  python main.py --checkthis 
 1419  clear
 1420  python main.py --checkthis 
 1421  clear
 1422  python main.py --checkthis 
 1423  clear
 1424  python main.py --checkthis 
 1425  clear
 1426  python main.py --checkthis 
 1427  clear
 1428  python main.py --checkthis 
 1429  clear
 1430  python main.py --checkthis 
 1431  clear
 1432  python main.py --checkthis 
 1433  clear
 1434  python main.py --checkthis 
 1435  clear
 1436  python main.py --checkthis 
 1437  clear
 1438  python main.py --checkthis 
 1439  clear
 1440  python main.py --checkthis 
 1441  clear
 1442  python main.py --checkthis 
 1443  clear
 1444  python main.py --checkthis 
 1445  clear
 1446  python main.py --checkthis 
 1447  clear
 1448  python main.py --checkthis 
 1449  git add .
 1450  git commit "1. erfolgreiche Analyse nach vielen Tagen, damit kann man schon mal arbeiten. Bislang ist die Schlussfolgerung falsch, aber die Einzelwerte sind ok"
 1451  git push
 1452  git status
 1453  clear
 1454  python main.py --checkthis 
 1455  clear
 1456  python main.py --checkthis 
 1457  clear
 1458  python main.py --checkthis 
 1459  clear
 1460  python main.py --checkthis 
 1461  clear
 1462  python main.py --checkthis 
 1463  git add .
 1464  git commit "Das script ist für lokale production schon geeignet. Es gibt Wahrscheinlichkeitswerte (prob) für LRH oder Ghosts, leider ist die Gesamtschlussfolgerung noch falsch: bei 8% LRH-prob und 6% ghosts-prob wird der Squirrel-Text LRH zugeordnet."
 1465  git push
 1466  git tag -a v1.0 -m "Stabile Version 1.0"
 1467  git push
 1468  python main.py --checkthis 
 1469  clear
 1470  python main.py --checkthis 
 1471  clear
 1472  python main.py --checkthis 
 1473  clear
 1474  python main.py --checkthis 
 1475  clear
 1476  python main.py --checkthis 
 1477  clear
 1478  python main.py --checkthis 
 1479  clear
 1480  python main.py --checkthis 
 1481  clear
 1482  python main.py --checkthis 
 1483  git log
 1484  git checkout v1.0
 1485  python main.py --checkthis 
 1486  clear
 1487  git log
 1488  git fetch --all
 1489  git branch -a
 1490  # Wechsle zum "main" Branch
 1491  git checkout master
 1492  git checkout main
 1493  git branch -a
 1494  git log
 1495  git branch -a
 1496  git checkout stable
 1497  git log
 1498  git log --all --oneline --graph
 1499  git status
  1500  git rev-parse HEAD
 1501  git log
 1502  history | grep `date +%Y-%m-%d` > today_commands.txt
 1503  history | grep `date +2024-08-02` > today_commands.txt
 1504  history 
 1505  history | grep > today_commands.txt
 1506  history > today_commands.txt
